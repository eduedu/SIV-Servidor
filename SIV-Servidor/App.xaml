<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SIV_Servidor"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="SIV_Servidor.App"
            xmlns:sys="clr-namespace:System;assembly=mscorlib"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!--DURACION ANIMACION-->
        <sys:Double x:Key="TiempoAnimacion">0.3</sys:Double>

        <!--COLORES-->
        <SolidColorBrush x:Key="confoco"   Color="#FFFFF572"/>
        <SolidColorBrush x:Key="confoco2"   Color="#FFA2E87C"/>
        <SolidColorBrush x:Key="infocable" Color="#FFA2E87C"/>
        <SolidColorBrush x:Key="infocable2" Color="#FF88FFDE"/>
        <SolidColorBrush x:Key="infocable3" Color="#FFFF90B7"/>
        <SolidColorBrush x:Key="infocable4" Color="#FFE8A97C"/>
        <!--<SolidColorBrush x:Key="sinfoco" Color="#fff0f0f0"/>-->
        <SolidColorBrush x:Key="sinfoco" Color="#FFd0d0e0"/>
        <SolidColorBrush x:Key="colorfondo" Color="#FF202027"/>
        <SolidColorBrush x:Key="colorfondo2" Color="#FF303039"/>
        <SolidColorBrush x:Key="colorfondo3" Color="#FF404051"/>
        <SolidColorBrush x:Key="boton" Color="#FFf0f0f0"/>
        <SolidColorBrush x:Key="detalles" Color="#FF707080"/>
        <SolidColorBrush x:Key="textoclaro" Color="#FFd0d0e0"/>
        <SolidColorBrush x:Key="textoobscuro" Color="#FF222222"/>


        <SolidColorBrush x:Key="ListBorder" Color="#828790"/>



        <!--LISTFILTRO STYLE-->
        <Style x:Key="listFiltroStyle1" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#FF042271"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Themes:ListBoxChrome x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" SnapsToDevicePixels="true">
                            <ScrollViewer Padding="{TemplateBinding Padding}" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Themes:ListBoxChrome>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <Style TargetType="ListViewItem">
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true" />
                        <Condition Property="Selector.IsSelectionActive" Value="true" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Foreground" Value="{StaticResource textoobscuro}" />
                    <Setter Property="Background" Value="{StaticResource  confoco}" />
                    <Setter Property="BorderBrush" Value="{StaticResource confoco}" />
                </MultiTrigger>

                <!--<Trigger Property="IsSelected" Value="true" >
                    <Setter Property="Background" Value="#FFB4FFB4" />
                </Trigger>-->
                <!--<MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                        <Condition Property="IsFocused" Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Background" Value="#FFFFFF78" />
                    </MultiTrigger.Setters>
                </MultiTrigger>-->
            </Style.Triggers>

        </Style>

        <!--LISTVIEW STYLE-->
        <ControlTemplate x:Key="ListViewItemStyleParaListFiltro" TargetType="{x:Type ListViewItem}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" SnapsToDevicePixels="True">
                <Border x:Name="InnerBorder" BorderThickness="1" CornerRadius="1">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="11"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="UpperHighlight" Fill="#75FFFFFF" Visibility="Collapsed"/>
                        <GridViewRowPresenter Columns="{TemplateBinding GridView.ColumnCollection}" Content="{TemplateBinding Content}" Grid.RowSpan="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </Border>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FFF1FBFF" Offset="0"/>
                                <GradientStop Color="#FFD5F1FE" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" Value="#FFCCF0FF"/>
                    <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FFD9F4FF" Offset="0"/>
                                <GradientStop Color="#FF9BDDFB" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" Value="#FF98DDFB"/>
                    <Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF"/>
                    <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                    <Setter Property="Fill" TargetName="UpperHighlight" Value="#40FFFFFF"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True"/>
                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FFEEEDED" Offset="0"/>
                                <GradientStop Color="#FFDDDDDD" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" Value="#FFCFCFCF"/>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True"/>
                        <Condition Property="IsMouseOver" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FFEAF9FF" Offset="0"/>
                                <GradientStop Color="#FFC9EDFD" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" Value="#FF98DDFB"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--Estilo botones MENU-->
        <Style TargetType="Button" x:Key="BotonMenu" >
            <Setter Property="Foreground" Value="{StaticResource textoobscuro}" />
            <Setter Property="Background" Value="{StaticResource sinfoco}" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border" 
                            BorderThickness="1"
                            Padding="0,0" 
                            BorderBrush="DarkGray" 
                            CornerRadius="3" 
                            Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Foreground" Value="{StaticResource textoobscuro}" />
                                <Setter Property="Background" Value="{StaticResource sinfoco}" />
                            </Trigger>
                            <Trigger Property="Button.IsFocused" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Foreground" Value="{StaticResource textoobscuro}" />
                                <Setter Property="Background" Value="{StaticResource confoco}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="SnapsToDevicePixels" Value="True" />
        </Style>

        <!--Estilo BOTON MENU SELECTED-->
        <Style TargetType="Button" x:Key="BotonMenuSelected" >
            <Setter Property="Foreground" Value="{StaticResource textoobscuro}" />
            <Setter Property="Background" Value="{StaticResource confoco2}" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border" 
                            BorderThickness="1"
                            Padding="0,0" 
                            BorderBrush="DarkGray" 
                            CornerRadius="3" 
                            Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <!--<Setter Property="Foreground" Value="{StaticResource textoobscuro}" />
                                <Setter Property="Background" Value="{StaticResource sinfoco}" />-->
                            </Trigger>
                            <Trigger Property="Button.IsFocused" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Foreground" Value="{StaticResource textoobscuro}" />
                                <Setter Property="Background" Value="{StaticResource confoco}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="SnapsToDevicePixels" Value="True" />
        </Style>

        <!--Estilo TEXT BOXES-->
        <Style TargetType="TextBox" x:Key="StyleTextbox" >
            <Setter Property="Foreground" Value="{StaticResource textoobscuro}" />
            <Setter Property="Background" Value="{StaticResource sinfoco}" />
            <!--<Setter Property="FocusVisualStyle" Value="{x:Null}"/>-->
            <!--<Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border Name="border" 
                            BorderThickness="1"
                            Padding="0,0" 
                            BorderBrush="DarkGray" 
                            CornerRadius="3" 
                            Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Foreground" Value="{StaticResource textoobscuro}" />
                                <Setter Property="Background" Value="{StaticResource sinfoco}" />
                            </Trigger>
                            <Trigger Property="Button.IsFocused" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Foreground" Value="{StaticResource textoobscuro}" />
                                <Setter Property="Background" Value="{StaticResource confoco}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->

            <!--<Setter Property="SnapsToDevicePixels" Value="True" />-->
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="true">
                    <Setter Property="Background" Value="{StaticResource confoco}" />
                </Trigger>
            </Style.Triggers>

        </Style>
        <Style TargetType="TextBox" x:Key="StyleTextboxModificar" >
            <Setter Property="Foreground" Value="{StaticResource textoobscuro}" />
            <Setter Property="Background" Value="{StaticResource infocable3}" />
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="true">
                    <Setter Property="Background" Value="{StaticResource infocable4}" />
                </Trigger>
            </Style.Triggers>

        </Style>


        <Style TargetType="TextBox" x:Key="StyleTextboxUpper" >
            <Setter Property="Foreground" Value="{StaticResource textoobscuro}" />
            <Setter Property="Background" Value="{StaticResource sinfoco}" />
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="true">
                    <Setter Property="Background" Value="{StaticResource confoco}" />
                </Trigger>
                <DataTrigger Binding="{Binding Text.Length, RelativeSource={RelativeSource Self}}" Value="0">
                    <Setter Property="CharacterCasing" Value="Upper"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBox" x:Key="StyleTBNoEditable" >
            <Setter Property="Background" Value="{StaticResource colorfondo}" />
            <Setter Property="Foreground" Value="{StaticResource textoclaro}" />
            <Setter Property="BorderBrush" Value="{StaticResource textoclaro}" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Right" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>
        <Style TargetType="TextBox" x:Key="StyleTBNoEditableFondo2">
            <Setter Property="Background" Value="{StaticResource colorfondo3}" />
            <Setter Property="Foreground" Value="{StaticResource textoclaro}" />
            <Setter Property="BorderBrush" Value="{StaticResource textoclaro}" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Right" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>
        <Style TargetType="TextBox" x:Key="StyleTBNoEditableFondo2Left">
            <Setter Property="Background" Value="{StaticResource colorfondo3}" />
            <Setter Property="Foreground" Value="{StaticResource textoclaro}" />
            <Setter Property="BorderBrush" Value="{StaticResource textoclaro}" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>
        <Style TargetType="TextBox" x:Key="StyleTbNoEditableNuevo" >
            <Setter Property="Background" Value="{StaticResource infocable3}" />
            <Setter Property="Foreground" Value="{StaticResource textoobscuro}" />
            <Setter Property="BorderBrush" Value="{StaticResource textoclaro}" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <!--<Setter Property="HorizontalContentAlignment" Value="{x:Null}" />-->
            <Setter Property="Focusable" Value="False" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>
        <Style TargetType="TextBox" x:Key="StyleTbNoEditableNuevo2" >
            <Setter Property="Background" Value="{StaticResource infocable3}" />
            <Setter Property="Foreground" Value="{StaticResource textoobscuro}" />
            <Setter Property="BorderBrush" Value="{StaticResource textoclaro}" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>


    </Application.Resources>
</Application>
